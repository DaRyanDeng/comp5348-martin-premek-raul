<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity"
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,
                 Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <connectionStrings>

    <!-- Premek's Connection String <add name="BackupBankEntityModelContainer" connectionString="metadata=res://*/BackupBankEntityModel.csdl|res://*/BackupBankEntityModel.ssdl|res://*/BackupBankEntityModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=\\10.0.0.101\pipe\sql\query;Initial Catalog=BackupBank;Integrated Security=True;Pooling=False&quot;" providerName="System.Data.EntityClient" /> -->
    <!-- Generic Connection String <add name="BackupBankEntityModelContainer" connectionString="metadata=res://*/BackupBankEntityModel.csdl|res://*/BackupBankEntityModel.ssdl|res://*/BackupBankEntityModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=MATT-PC\SQLEXPRESS;Initial Catalog=BackupBank;Integrated Security=True;MultipleActiveResultSets=True&quot;" providerName="System.Data.EntityClient" /> -->

    <add name="BackupBankEntityModelContainer" connectionString="metadata=res://*/BackupBankEntityModel.csdl|res://*/BackupBankEntityModel.ssdl|res://*/BackupBankEntityModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=\\10.0.0.101\pipe\sql\query;Initial Catalog=BackupBank;Integrated Security=True;Pooling=False&quot;" providerName="System.Data.EntityClient" />

  </connectionStrings>
  <unity>

    <typeAliases>
      <!-- Lifetime manager types -->
      <typeAlias alias="singleton"
                 type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,
                     Microsoft.Practices.Unity" />
      <typeAlias alias="external"
                 type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager,
                     Microsoft.Practices.Unity" />

      <!-- Custom object types -->
      <typeAlias alias="ITransferProvider"
                 type="BackupBank.Business.Components.Interfaces.ITransferProvider, BackupBank.Business.Components.Interfaces" />
      <typeAlias alias="TransferProvider"
                 type="BackupBank.Business.Components.TransferProvider, BackupBank.Business.Components" />
    </typeAliases>
    <containers>
      <container name="containerOne">
        <types>

          <type type="ITransferProvider" mapTo="TransferProvider" />
        </types>
      </container>
    </containers>
  </unity>
  <system.serviceModel>
    <services>
      <service name="BackupBank.Services.TransferService" behaviorConfiguration="ServiceMetadataBehavior">
        <endpoint address="net.tcp://localhost:9020/TransferService" binding="netTcpBinding" bindingConfiguration="TransactionalTCP" contract ="BackupBank.Services.Interfaces.ITransferService"/>
        <endpoint address="net.tcp://localhost:9020/TransferService/mex" binding="mexTcpBinding" contract="IMetadataExchange"/>
      </service>
    </services>
    <bindings>
      <netTcpBinding>
        <binding name="TransactionalTCP" transactionFlow="true"/>
      </netTcpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="ServiceMetadataBehavior">
          <serviceMetadata />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  
</configuration>